[{"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/reportWebVitals.js":"1","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/Auth.js":"2","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/index.js":"3","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/Admin.js":"4","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/api.js":"5","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/Home.js":"6","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/App.js":"7"},{"size":364,"mtime":1611567045844,"results":"8","hashOfConfig":"9"},{"size":1052,"mtime":1611574089680,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1611567045843,"results":"11","hashOfConfig":"9"},{"size":3664,"mtime":1611567045838,"results":"12","hashOfConfig":"9"},{"size":674,"mtime":1611567045841,"results":"13","hashOfConfig":"9"},{"size":6353,"mtime":1611574805192,"results":"14","hashOfConfig":"9"},{"size":1085,"mtime":1611567045839,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1na8ybu",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/reportWebVitals.js",[],"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/Auth.js",["31"],"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/index.js",[],"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/Admin.js",[],"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/api.js",[],"/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/Home.js",["32","33","34"],"import React from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { Container } from \"@material-ui/core\";\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport firebase from \"firebase\"\n\n\nconst localizer = momentLocalizer(moment);\nexport default function Home() {\n\n  const [open, setOpen] = React.useState(false);\n  const [data, setData] = React.useState({\n      name:'',\n      song:'',\n      email:'',\n      location:'',\n      start:new Date(),\n      end:new Date(),\n  });\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNameChange = (e) => {\n      setData({\n          name:e.target.value,\n          song:data.song,\n          email:data.email,\n          location:data.location,\n          start:data.start,\n          end:data.end,\n      });\n  }\n\n  const handleEmailChange = (e) => {\n      setData({\n          name:data.name,\n          song:data.song,\n          email:e.target.value,\n          location:data.location,\n          start:data.start,\n          end:data.end,\n      });\n  }\n\n  const handleSongChange = (e) => {\n      setData({\n          name:data.name,\n          song:e.target.value,\n          email:data.email,\n          location:data.location,\n          start:data.start,\n          end:data.end,\n      });\n  }\n\n  const handleLocationChange = (e,value) => {\n      setData({\n          name:data.name,\n          song:data.song,\n          email:data.email,\n          location:value,\n          start:data.start,\n          end:data.end,\n      });\n  }\n\n  const handleSubmit = (e) => {\n      writeToFirebase();\n      setOpen(false);\n      alert(\"request submitted!\");\n  }\n\n  const writeToFirebase = () => {\n        const db = firebase.firestore();\n        db\n            .collection(\"events\")\n            .doc()\n            .set({\n                email: data.email,\n                end: {dateTime: data.end},\n                location: parseLocation(),\n                start: {dateTime: data.start},\n                summary: data.song,\n            });\n  }\n\n  const parseLocation = () => {\n      if(data.location==\"school\") return \"In School\";\n      return \"At Home\";\n  }\n\n  const handleSelectSlot = ({start,end}) => {\n      setData({\n          name:data.name,\n          song:data.song,\n          email:data.email,\n          location:data.location,\n          start:start,\n          end:end,\n      });\n      setOpen(true);\n  };\n\n  const parseDateTime = (date) => {\n      var hour = date.getHours();\n      var min = date.getMinutes();\n      var meridiem = 'am';\n      if(hour==0) hour=12;\n      else if(hour==12) meridiem = 'pm';\n      else if(hour>12) {\n          hour -= 12;\n          meridiem = 'pm';\n      }\n      var time_str = hour+\":\"+(\"0\"+min).slice(-2)+meridiem;\n      return time_str;\n  }\n\n  const parseDateDate = (date) => {\n      var date_str = date.toDateString();\n      var day = date_str.substring(0,3);\n      var mmddyyyy = date_str.substring(4);\n      return mmddyyyy+\" (\"+day+\")\";\n  }\n\n  return (\n    <Container>\n      <p>\n        Please select a date and key in your desired time. Make sure it doesn't\n        clash!\n      </p>\n      <Calendar\n        localizer={localizer}\n        events={[]}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 800 }}\n        selectable={true}\n        defaultView={'week'}\n        views={['week']}\n        onSelectSlot={handleSelectSlot}\n      />\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Request for timeslot</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You selected: {parseDateDate(data.start)+\" \"+parseDateTime(data.start)+\" to \"+parseDateTime(data.end)}<br />\n            Please fill in your details below to submit your request\n          </DialogContentText>\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            value={data.name}\n            fullWidth\n            onChange={handleNameChange}\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"song\"\n            label=\"Your Group's Song\"\n            type=\"text\"\n            value={data.song}\n            fullWidth\n            onChange={handleSongChange}\n          />\n          <TextField\n            required\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Your Email Address\"\n            type=\"email\"\n            value={data.email}\n            fullWidth\n            onChange={handleEmailChange}\n          />\n          <FormControl component=\"fieldset\">\n            <FormHelperText>Location</FormHelperText>\n            <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue={data.location} onChange={handleLocationChange}>\n                <FormControlLabel\n                  value=\"school\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"In School\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"home\"\n                  control={<Radio color=\"primary\" />}\n                  label=\"At Home\"\n                  labelPlacement=\"end\"\n                />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n","/Users/raymond/Desktop/nus/y4s2/xreso/calendar/resobooking/src/App.js",[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":105,"column":23,"nodeType":"41","messageId":"42","endLine":105,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":125,"column":14,"nodeType":"41","messageId":"42","endLine":125,"endColumn":16},{"ruleId":"39","severity":1,"message":"40","line":126,"column":19,"nodeType":"41","messageId":"42","endLine":126,"endColumn":21},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]